import tkinter as tk
from tkinter import messagebox
from db import init_db, mark_completed, get_completed, get_total_points
from challenges import get_challenges

class EcoAppTemplate:
    def __init__(self, root):
        self.root = root
        self.setup_window()
        self.create_widgets()
        self.selected_challenge = None
        self.confirm_button = None
        self.update_challenges()
    
    def setup_window(self):
        self.root.title("üåç –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ß–µ–ª–ª–µ–Ω–¥–∂–∏")
        self.root.geometry("600x700")
    
    def create_widgets(self):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        tk.Label(
            self.root,
            text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≠–∫–æ-–ß–µ–ª–ª–µ–Ω–¥–∂!",
            font=("Arial", 18, "bold"),
            fg="green"
        ).pack(pady=20)
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        tk.Label(
            self.root,
            text="–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–∏–π –∏ –Ω–∞—á–Ω–∏ —Å–ø–∞—Å–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É üå±",
            font=("Arial", 12)
        ).pack(pady=10)
        
        # –û—á–∫–∏
        self.points_label = tk.Label(
            self.root,
            text=f"–¢–≤–æ–∏ –æ—á–∫–∏: {get_total_points()}",
            font=("Arial", 12, "bold"),
            fg="blue"
        )
        self.points_label.pack(pady=10)
        
        # –§—Ä–µ–π–º –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
        self.challenge_frame = tk.LabelFrame(
            self.root, 
            text="üí™ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ß–µ–ª–ª–µ–Ω–¥–∂–∏", 
            padx=10, 
            pady=10
        )
        self.challenge_frame.pack(fill="both", expand=True, padx=20, pady=10)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        tk.Button(
            self.root,
            text="üîÅ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",
            font=("Arial", 12),
            command=self.update_challenges
        ).pack(pady=10)
        
        # –ü–æ–¥–≤–∞–ª
        tk.Label(
            self.root,
            text="–°–¥–µ–ª–∞–Ω–æ —Å –∑–∞–±–æ—Ç–æ–π –æ–± —ç–∫–æ–ª–æ–≥–∏–∏ üåè",
            font=("Arial", 10),
            fg="gray"
        ).pack(side="bottom", pady=10)
    
    def update_challenges(self):
        for widget in self.challenge_frame.winfo_children():
            widget.destroy()
        
        for task in get_challenges():
            frame = tk.Frame(self.challenge_frame)
            frame.pack(pady=5, fill="x")
            
            if task in get_completed():
                btn = tk.Button(
                    frame,
                    text=f"‚úÖ {task}",
                    font=("Arial", 11),
                    width=40,
                    state="disabled"
                )
            else:
                btn = tk.Button(
                    frame,
                    text=task,
                    font=("Arial", 11),
                    width=40,
                    command=lambda t=task, f=frame: self.select_challenge(t, f)
                )
            btn.pack()
    
    def select_challenge(self, challenge, frame):
        if self.confirm_button:
            self.confirm_button.destroy()
        
        self.selected_challenge = challenge
        self.confirm_button = tk.Button(
            frame,
            text="‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å",
            bg="lightgreen",
            command=self.confirm_challenge
        )
        self.confirm_button.pack(pady=3)
    
    def confirm_challenge(self):
        if not self.selected_challenge:
            return
            
        mark_completed(self.selected_challenge, points=10)
        messagebox.showinfo("–£—Å–ø–µ—Ö!", f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {self.selected_challenge}\n+10 –æ—á–∫–æ–≤!")
        
        self.selected_challenge = None
        if self.confirm_button:
            self.confirm_button.destroy()
            self.confirm_button = None
        
        self.update_challenges()
        self.points_label.config(text=f"–¢–≤–æ–∏ –æ—á–∫–∏: {get_total_points()}")

if __name__ == "__main__":
    init_db()
    root = tk.Tk()
    app = EcoAppTemplate(root)
    root.mainloop()
